name: Run DynamoRIO

on:
  push:

jobs:
  run-drmemory:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 
        with:
          ref: aeb660ba58b89b8f9eb05cc1c81d9aad7d66946e

      - name: Install dependencies for project (Linux)
        if: runner.os == 'Linux'
        run: | 
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 \
          python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          
      - name: Build repository (Linux)
        if: runner.os == 'Linux'
        run: | 
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          make download -j8

      - name: Install DynamoRIO
        if: runner.os == 'Linux'
        run: | 
          sudo apt-get update
          sudo apt-get install -y libunwind8
          wget -P /tmp/ https://github.com/DynamoRIO/dynamorio/releases/download/release_10.0.0/DynamoRIO-Linux-10.0.0.tar.gz && tar -xzf /tmp/DynamoRIO-Linux-10.0.0.tar.gz -C /tmp/
           
      - name: Run DynamoRIO
        run: |
          export DYNAMORIO_HOME="/tmp/DynamoRIO-Linux-10.0.0"
          export GITHUB_PATH="$DYNAMORIO_HOME/bin64:$DYNAMORIO_HOME/tools/bin64:$GITHUB_PATH"
          export LD_LIBRARY_PATH="$DYNAMORIO_HOME/lib64:$LD_LIBRARY_PATH"
          #!/bin/bash
          set +e 

          echo "=========[DynamoRIO Service Started!]========="

          DIRECTORY=.

          is_executable() {
            local file="$1"
            if file "$file" | grep -q 'ELF 64-bit'; then
              return 0
            else
              return 1
            fi
          }

          run_with_dynrio_coverage() {
            local executable="$1"
            local log_dir="./logs_coverage"
            mkdir -p "$log_dir"
            $DYNAMORIO_HOME/bin64/drrun -t drcov -logdir "$log_dir" -dump_text -- "$executable"
            local exit_status=$?
            
            if [ $exit_status -eq 124 ]; then
              echo "Execution timed out after 45 seconds: $executable"
            fi

            for log_file in "$log_dir"/drcov.*.log; do
              $DYNAMORIO_HOME/tools/bin64/drcov2lcov -input "$log_file" -src_filter "$log_dir"
            done
          }

          find "$DIRECTORY" -type f -executable | while read -r file; do
            if is_executable "$file"; then
              run_with_dynrio_coverage "$file"
              echo ""
              echo ""
            fi
          done

          echo "=========[DynamoRIO service finished]========="
  
      - name: Upload Dr. Memory reports
        uses: actions/upload-artifact@v4
        with:
          name: drmemory-report-${{ github.event.repository.name }}-on-${{ matrix.os }}
          path: './logs_coverage/*'
